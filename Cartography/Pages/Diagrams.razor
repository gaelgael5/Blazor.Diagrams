@page "/diagrams"

@using Blazor.Diagrams.Core
@using Blazor.Diagrams.Core.Geometry
@using Blazor.Diagrams.Core.Models

<!-- required to resolve DiagramCanvas component -->
@using Blazor.Diagrams.Components
@using Blazor.Diagrams.Core.Tools

<!--
Parent of DiagramCanvas has to have a fixed width/height
or it will not be rendered.

100vw = 100% viewport width
100vh = 100% viewport height
-->
<div class="row h-100">

    @* Toolbox *@
    <RadzenCard Style="width: fit-content" >
        @foreach (ToolboxCategory category in toolbox.Categories())
        {
            <RadzenPanelMenu Style="width:160px">
                <RadzenPanelMenuItem Text="@category.Label" Icon="@category.Icon">
                    @foreach (ToolboxItem item in toolbox.GetByCategory(category))
                    {
                        string uuid = item.Uuid.ToString();
                        <RadzenPanelMenuItem draggable="true"
                                     @ondragstart="() => OnDragStart(uuid)"
                                     Text="@item.Label"
                                     Icon="@item.Icon">
                        </RadzenPanelMenuItem>
                    }
                </RadzenPanelMenuItem>
            </RadzenPanelMenu>
        }
    </RadzenCard>

    <div class="col-9" style="width:100vw; height: 100vh"
         ondragover="event.preventDefault();"
         @ondragover:preventDefault @ondrop="OnDrop">
        <CascadingValue Value="Diagram">
            <DiagramCanvas></DiagramCanvas>
        </CascadingValue>
    </div>

</div>
